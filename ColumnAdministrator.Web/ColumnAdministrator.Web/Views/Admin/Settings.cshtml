@model ColumnAdministrator.Web.Infrastructure.CurrentAppSettings
@{
    ViewBag.Title = "Настройки";
}

@section panel
{
    <a class="btn btn-primary" title="панель управления" href="~/admin/index"><i class="glyphicon glyphicon-cog"></i></a>
}

<div class="row">
    <div class="page-header">
        <h1>
            @ViewBag.Title
            <small>системы</small>
        </h1>
    </div>
    @if (ViewBag.Reloaded != null) {
        <p class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Закрыть</span></button>
            @ViewBag.Reloaded
        </p>
        <script> var loaded = true;</script>
    }
    <div class="col-md-3">

        @using (Html.BeginForm()) {

            @Html.ValidationSummary()
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(x => x.IsLogging)<br />
                @Html.CheckBoxFor(x => x.IsLogging)
            </div><div class="form-group">
                @Html.LabelFor(x => x.IsHtmlForEmailMessagesEnabled)<br />
                @Html.CheckBoxFor(x => x.IsHtmlForEmailMessagesEnabled)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.AdminEmail)
                @Html.TextBoxFor(x => x.AdminEmail, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.AdminEmail)
            </div><div class="form-group">
                @Html.LabelFor(x => x.RobotEmail)
                @Html.TextBoxFor(x => x.RobotEmail, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.RobotEmail)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.SmtpClient)
                @Html.TextBoxFor(x => x.SmtpClient, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.SmtpClient)
            </div>   <div class="form-group">
                @Html.LabelFor(x => x.DomainUrl)
                @Html.TextBoxFor(x => x.DomainUrl, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.DomainUrl)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.DefaultPagerSize)
                @Html.TextBoxFor(x => x.DefaultPagerSize, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.DefaultPagerSize)
            </div>

            if (Model.EntityColumns != null && Model.EntityColumns.Any()) {
                <h4>Доступные колонки:</h4>
                for (int i = 0; i < Model.EntityColumns.Count(); i++) {

                    <div class="input-group margin20">
                            @if (!Model.EntityColumns[i].IsRequired)
                            {
                                <span class="input-group-addon">
                                    @{ var name = "EntityColumns[" + i + "].IsEnabled"; }
                                    @Html.CheckBox(name, @Model.EntityColumns[i].IsEnabled)
                                </span>
                            }
                            else
                            {
                                @Html.Hidden("EntityColumns[" + i + "].Name", Model.EntityColumns[i].Name)
                            }
                        <input type="text" id="columns_@i" name="EntityColumns[@i].Name" value="@Model.EntityColumns[i].Name" class="form-control"
                               disabled="@Model.EntityColumns[i].IsRequired" />
                        @Html.Hidden("EntityColumns[" + i + "].IsRequired", Model.EntityColumns[i].IsRequired)
                        @Html.Hidden("EntityColumns[" + i + "].Label", Model.EntityColumns[i].Label)
                        @Html.Hidden("EntityColumns[" + i + "].TemplateName", Model.EntityColumns[i].TemplateName)

                    </div>

                }
            }
            <p>
                <button class="btn btn-primary">Сохраннить</button>
            </p>
        }
    </div>


</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        if (window.loaded) {
            window.setTimeout(function () {
                $("p.alert").slideUp();
            }, 2500);
        }
    </script>
}